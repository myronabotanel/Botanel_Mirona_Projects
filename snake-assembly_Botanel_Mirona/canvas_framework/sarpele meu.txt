
	;snake
	
	mov x_cap, 60
	mov y_cap, 350
	mov x_cpy, 60
	mov y_cpy, 350
	
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cap, y_cap, 10, 0800000h
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	
misca_sarpe:
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cap, y_cap, 10, 0800000h
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	mov eax, y_cpy
	add eax, 1
	mov y_cpy, eax
	linie_orizontala x_cpy, y_cpy, 10, 0FFFF00h
	
	cmp y_cap, 26 ; Compară valoarea lui y_cap cu 26
	jle final_draw ; Sari la final_draw dacă y_cap <= 26
	
	jmp misca_sarpe ; Continuă bucla în caz contrar
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	genereaza_mancare:
	cmp aux1, 1
	;je nu_genera
	rdtsc   ;obtinem un nr aleatoriu pt poz x pe axa "mancarii"
	mov ecx, 640-20 ;scriem "-20" deaoarece zona aceea este verde, face, practic, parte din labirintu
	mov edx, 0 ;restul impartirii va fi stocat in edx
	div ecx   ; <=> eax*edx/ecx
	mov x_mancare, edx  ;salvam restul in x_mancare
	mov ebx, 0 
	mov ebx, 460
	cmp x_mancare, ebx  
	jle genereaza_mancare
	rdtsc   ;obtinem nr aleatoriu pt poz y de pe axa "mancarii"
	mov ecx, 460 
	mov edx, 0
	div ecx 
	mov y_mancare, edx
	mov ebx, 620
	cmp y_mancare, ebx 
	jle genereaza_mancare
	
	detremina_pozitie x_mancare, y_mancare
	cmp dword ptr[eax], 0412FFh
	je genereaza_mancare
	
	mov ebx,0
	mov ebx, x_mancare
	add ebx, symbol_width
	detremina_pozitie ebx,y_mancare
	cmp dword ptr[eax], 0412FFh
	je genereaza_mancare
	
	mov ebx,0
	mov ebx, y_mancare
	add ebx, symbol_height
	detremina_pozitie x_mancare, ebx
	cmp dword ptr[eax], 0412FFh
	je genereaza_mancare
	
	mov ebx,0
	mov ebx, x_mancare
	add ebx, symbol_width
	mov edx,0
	mov edx,y_mancare
	add edx,symbol_height
	detremina_pozitie ebx, edx
	cmp dword ptr[eax], 0412FFh
	je genereaza_mancare
	
	make_text_macro '+',area, x_mancare,y_mancare
	mov auxx, 1